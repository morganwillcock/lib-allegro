build_windows_task:
  matrix:
    - name: build_windows_task
      only_if: $CIRRUS_RELEASE == ''
    - name: build_windows_release_task
      only_if: $CIRRUS_RELEASE != ''
      auto_cancellation: true
  windows_container:
    dockerfile: ci/windows/Dockerfile
    os_version: 2019
  env:
    matrix:
      - BUILD_CONFIG: Release MD
      - BUILD_CONFIG: Release MT
      - BUILD_CONFIG: Debug MD
      - BUILD_CONFIG: Debug MT
  build_script: >
    "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86 &&
    pushd build\vs2015 &&
    msbuild ALLEGRO.sln /p:PlatformToolset=v140 /p:Configuration="%BUILD_CONFIG%" /p:Platform=Win32 /maxcpucount /nologo
  binaries_artifacts:
    path: build/VS2015/lib/alleg-*.lib

build_linux_task:
  matrix:
    - name: build_linux_task
      only_if: $CIRRUS_RELEASE == ''
    - name: build_linux_release_task
      only_if: $CIRRUS_RELEASE != ''
      auto_cancellation: true
  container:
    dockerfile: ci/linux/Dockerfile
    docker_arguments:
      matrix:
        - FROM_DEBIAN: debian:jessie
        - FROM_DEBIAN: i386/debian:jessie
  env:
    matrix:
      - BUILD_TYPE: debug
        SHARED: on
      - BUILD_TYPE: debug
        SHARED: off
      - BUILD_TYPE: release
        SHARED: on
      - BUILD_TYPE: release
        SHARED: off
  build_script: |
    filename=lib-allegro_$BUILD_TYPE
    [ "$SHARED" = "off" ] && filename=${filename}_static
    filename=${filename}_$(dpkg --print-architecture)
    mkdir build_$filename && cd build_$filename
    cmake -DSHARED=$SHARED -DCMAKE_BUILD_TYPE=$BUILD_TYPE .. && make
  archive_script: |
    filename=$(echo build_lib-allegro_*)
    cd $filename && tar -cvzf $CIRRUS_WORKING_DIR/${filename#build_}.tar.gz include/ lib/
  binaries_artifacts:
    path: lib-allegro_*.tar.gz

upload_release_task:
  only_if: $CIRRUS_RELEASE != ''
  auto_cancellation: true
  depends_on:
    - build_windows_release
    - build_linux_release
  freebsd_instance:
    image: freebsd-12-0-release-amd64
  release_script: |
    mkdir github_release
    win_url=https://api.cirrus-ci.com/v1/artifact/github/$CIRRUS_REPO_FULL_NAME/build_windows_release/binaries.zip?branch=$CIRRUS_BRANCH
    curl -fLsS "$win_url" | tar -f - -xvzC github_release -s '|.*/||p'
    linux_url=https://api.cirrus-ci.com/v1/artifact/github/$CIRRUS_REPO_FULL_NAME/build_linux_release/binaries.zip?branch=$CIRRUS_BRANCH
    curl -fLsS "$linux_url" | tar -f - -xvzC github_release
    for fpath in github_release/*
    do
      echo Uploading $fpath
      curl -X POST \
        --data-binary @$fpath \
        --header "Authorization: token ENCRYPTED[299799ab57de29b0c87542c625013a262bcbb44a5538bba5ebb40d1b5728f8cf9148e2cf99e750a0991f7bf53142b85c]" \
        --header "Content-Type: application/octet-stream" \
        "https://uploads.github.com/repos/$CIRRUS_REPO_FULL_NAME/releases/$CIRRUS_RELEASE/assets?name=${fpath##*/}"
    done
